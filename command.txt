# Truth Training Commands

## Build and Test
```bash
cargo check && cargo test
./gradlew assembleDebug
./gradlew connectedAndroidTest
```

Note: Ensure truth-core backend is running before Android integration tests.

## Legacy Commands (Deprecated)
The following commands are from older versions and may not work with current v0.4.0:

```bash
# 1) Initialization
cargo run -p app -- --db truth_db.sqlite init

# 2) Knowledge base seeding (RU) Initialize directories:
cargo run -p app -- --db truth_db.sqlite seed --locale ru
# (or EN)
# cargo run -p app -- --db truth_db.sqlite seed --locale en

# 3) Add event (using ready context, e.g. id=2 "Interpersonal: concealment")
cargo run -p app -- --db truth_db.sqlite add-event \
  --description "Concealing fact in conversation" --context 2 --vector false

# 4) Mark detection
cargo run -p app -- --db truth_db.sqlite detect --id 1 --detected false --corrected false

# 5) Add impact (reputational, negative)
cargo run -p app -- --db truth_db.sqlite impact --event 1 --type-id 1 --positive false --notes "Loss of trust"

# 6) Recalculate metrics
cargo run -p app -- --db truth_db.sqlite recalc

# 7) Add context
cargo run -p app -- --db truth_db.sqlite insert-context --name "Privacy in social networks"

# 8) Add source
cargo run -p app -- --db truth_db.sqlite insert-source --name "Cybersecurity journal"

# 9) Add statement
cargo run -p app -- --db truth_db.sqlite insert-statement --context 1 --text "Social network X transfers data to third parties"

# 10) Add event
cargo run -p app -- --db truth_db.sqlite insert-event --statement 1 --description "Consideration of leak fact"

# 11) Link event to source (event_sources)
cargo run -p app -- --db truth_db.sqlite link-event-source --event 1 --source 1

# 12) Load all contexts
cargo run -p app -- --db truth_db.sqlite load-contexts

# 13) Load statements by context
cargo run -p app -- --db truth_db.sqlite load-statements --context 1

# 14) Load events by statement
cargo run -p app -- --db truth_db.sqlite load-events --statement 1

# 15) Load sources by event
cargo run -p app -- --db truth_db.sqlite load-sources --event 1

# 16) Show questions for event (without answers)
cargo run -p app -- --db truth_db.sqlite assess --event 1

# 17) Evaluate answers and get hint
cargo run -p app -- --db truth_db.sqlite assess --event 1 \
  --answers '{"src_independent":"yes","alt_hypothesis":"yes","incentives":"no","reproducible":"yes","logs_evidence":"yes","belief_pressure":"no","time_distance":"yes"}'

# 18) Apply hint (update detected=true)
cargo run -p app -- --db truth_db.sqlite assess --event 1 \
  --answers '{"src_independent":"yes","alt_hypothesis":"yes","incentives":"no","reproducible":"yes","logs_evidence":"yes","belief_pressure":"no","time_distance":"yes"}' \
  --apply

# Evaluate with answers (supports truth)
cargo run -p app -- --db truth_db.sqlite assess --event 1 --answers '{"src_independent":"yes","alt_hypothesis":"yes","incentives":"no","reproducible":"yes","logs_evidence":"yes","belief_pressure":"no","time_distance":"yes"}'

# Automatically apply result
cargo run -p app -- --db truth_db.sqlite assess --event 1 --answers '{"src_independent":"yes",...}' --apply

# Recalculate metrics: cargo run -p app -- recalc
# Show event: cargo run -p app -- show --id 1
```

## External References
- https://chatgpt.com/s/t_68b5da774f048191825b5868903b9ad1
- https://chatgpt.com/share/68b08235-da78-8007-a352-0f410a0a1269