name: iOS Build Check

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_run:
    workflows: ["Cross-Platform Build"]
    types: [completed]
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' || github.event_name == 'pull_request' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download iOS Rust libraries
        uses: actions/download-artifact@v4
        with:
          name: libtruth_core-ios
          path: target/
        if: ${{ github.event_name == 'workflow_run' }}
        continue-on-error: true
        
      - name: Check if artifacts were downloaded
        id: check-artifacts
        if: ${{ github.event_name == 'workflow_run' }}
        run: |
          if [ -f "target/aarch64-apple-ios/release/libtruth_core.a" ]; then
            echo "artifacts-found=true" >> $GITHUB_OUTPUT
          else
            echo "artifacts-found=false" >> $GITHUB_OUTPUT
          fi
        
      - name: Build iOS Rust libraries (for direct runs or if artifacts not found)
        if: ${{ github.event_name != 'workflow_run' || steps.check-artifacts.outputs.artifacts-found == 'false' }}
        run: |
          rustup target add aarch64-apple-ios
          rustup target add aarch64-apple-ios-sim
          cargo build --release --target aarch64-apple-ios --features mobile --lib -p truth_core
          cargo build --release --target aarch64-apple-ios-sim --features mobile --lib -p truth_core
          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-ios,aarch64-apple-ios-sim
          
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: rust-cache-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
          
      - name: Cache Xcode build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            truth-ios-client/build
          key: xcode-cache-${{ runner.os }}-${{ hashFiles('truth-ios-client/TruthTraining.xcodeproj/project.pbxproj') }}
          
      - name: Copy Rust libraries to iOS project
        run: |
          mkdir -p truth-ios-client/TruthTraining/
          cp target/aarch64-apple-ios/release/libtruth_core.a truth-ios-client/TruthTraining/
          
      - name: Install xcpretty
        run: gem install xcpretty
        
      - name: Build iOS project
        run: |
          cd truth-ios-client
          xcodebuild -scheme TruthTraining -sdk iphoneos -configuration Release | xcpretty
          
      - name: Build iOS project for simulator
        run: |
          cd truth-ios-client
          xcodebuild -scheme TruthTraining -sdk iphonesimulator -configuration Release | xcpretty
          
      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: truth_training.ipa
          path: |
            truth-ios-client/build/Products/Release-iphoneos/*.ipa
            truth-ios-client/build/Products/Release-iphonesimulator/*.app
          if-no-files-found: warn
          retention-days: 7
