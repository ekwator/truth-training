name: Desktop CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-test-linux-windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - uses: dtolnay/rust-toolchain@stable
      - name: Add Rust targets
        run: |
          rustup target add x86_64-unknown-linux-gnu
          rustup target add x86_64-pc-windows-gnu
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          sudo apt-get install -y gcc-mingw-w64-x86-64
          sudo apt-get install -y nsis
      - name: Install Tauri CLI
        run: cargo install tauri-cli
      - name: Set up MinGW and NSIS environment
        run: |
          echo "CC_x86_64_pc_windows_gnu=x86_64-w64-mingw32-gcc" >> $GITHUB_ENV
          echo "CXX_x86_64_pc_windows_gnu=x86_64-w64-mingw32-g++" >> $GITHUB_ENV
          echo "AR_x86_64_pc_windows_gnu=x86_64-w64-mingw32-ar" >> $GITHUB_ENV
          echo "CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER=x86_64-w64-mingw32-gcc" >> $GITHUB_ENV
          echo "MAKENSIS_PATH=/usr/bin/makensis" >> $GITHUB_ENV
      - name: Install deps
        working-directory: ./ui/desktop
        run: npm ci
      - name: Lint & Test
        working-directory: ./ui/desktop
        run: npm test --silent || true
      - name: Integration Tests
        working-directory: ./ui/desktop
        run: npm test -- tests/integration --verbose
      - name: Create Windows ICO icon
        working-directory: ./ui/desktop/src-tauri
        run: |
          # Install ImageMagick for icon conversion
          sudo apt-get install -y imagemagick
          # Convert PNG to ICO for Windows
          convert icons/icon.png -resize 256x256 icons/icon.ico
      - name: Build Web
        working-directory: ./ui/desktop
        run: npm run build
      - name: Build Tauri (Linux)
        working-directory: ./ui/desktop
        run: cargo tauri build --target x86_64-unknown-linux-gnu
      - name: Build Tauri (Windows)
        working-directory: ./ui/desktop
        run: cargo tauri build --target x86_64-pc-windows-gnu
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: truth_training-linux
          path: ui/desktop/src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/
          if-no-files-found: warn
          retention-days: 7
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: truth_training-windows
          path: ui/desktop/src-tauri/target/x86_64-pc-windows-gnu/release/bundle/
          if-no-files-found: warn
          retention-days: 7

  build-test-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - uses: dtolnay/rust-toolchain@stable
      - name: Add Rust target for macOS
        run: rustup target add x86_64-apple-darwin
      - name: Install Tauri CLI
        run: cargo install tauri-cli
      - name: Install deps
        working-directory: ./ui/desktop
        run: npm ci
      - name: Lint & Test
        working-directory: ./ui/desktop
        run: npm test --silent || true
      - name: Integration Tests
        working-directory: ./ui/desktop
        run: npm test -- tests/integration --verbose
      - name: Build Web
        working-directory: ./ui/desktop
        run: npm run build
      - name: Build Tauri (macOS)
        working-directory: ./ui/desktop
        run: cargo tauri build --target x86_64-apple-darwin
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: truth_training-macos
          path: ui/desktop/src-tauri/target/x86_64-apple-darwin/release/bundle/
          if-no-files-found: warn
          retention-days: 7


