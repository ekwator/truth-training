name: Android Build Check

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_run:
    workflows: ["Cross-Platform Build"]
    types: [completed]
    branches: [master]
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' || github.event_name == 'pull_request' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Android Rust libraries
        uses: actions/download-artifact@v4
        with:
          name: libtruth_core-android
          path: target/
        if: ${{ github.event_name == 'workflow_run' }}
        continue-on-error: true
        
      - name: Check if artifacts were downloaded
        id: check-artifacts
        if: ${{ github.event_name == 'workflow_run' }}
        run: |
          if [ -f "target/aarch64-linux-android/release/libtruth_core.so" ]; then
            echo "artifacts-found=true" >> $GITHUB_OUTPUT
          else
            echo "artifacts-found=false" >> $GITHUB_OUTPUT
          fi
        
      - name: Set up Android SDK and NDK (for direct runs or if artifacts not found)
        if: ${{ github.event_name != 'workflow_run' || steps.check-artifacts.outputs.artifacts-found == 'false' }}
        uses: android-actions/setup-android@v3
        with:
          packages: |
            ndk;26.1.10909125
            
      - name: Export NDK toolchain (for direct runs or if artifacts not found)
        if: ${{ github.event_name != 'workflow_run' || steps.check-artifacts.outputs.artifacts-found == 'false' }}
        run: |
          echo "ANDROID_NDK_HOME=${ANDROID_SDK_ROOT}/ndk/26.1.10909125" >> $GITHUB_ENV
          echo "${ANDROID_SDK_ROOT}/ndk/26.1.10909125/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH
        
      - name: Build Android Rust libraries (for direct runs or if artifacts not found)
        if: ${{ github.event_name != 'workflow_run' || steps.check-artifacts.outputs.artifacts-found == 'false' }}
        run: |
          rustup target add aarch64-linux-android
          rustup target add x86_64-linux-android
          cargo build --release --target aarch64-linux-android --features mobile --lib -p truth_core
          cargo build --release --target x86_64-linux-android --features mobile --lib -p truth_core
          
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-cache-${{ runner.os }}-${{ hashFiles('truth-android-client/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Copy Rust libraries to Android project
        run: |
          mkdir -p truth-android-client/app/src/main/jniLibs/arm64-v8a/
          mkdir -p truth-android-client/app/src/main/jniLibs/x86_64/
          cp target/aarch64-linux-android/release/libtruth_core.so truth-android-client/app/src/main/jniLibs/arm64-v8a/
          cp target/x86_64-linux-android/release/libtruth_core.so truth-android-client/app/src/main/jniLibs/x86_64/
          
      - run: cd truth-android-client && ./gradlew clean assembleDebug
      
      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: truth_training.apk
          path: |
            truth-android-client/app/build/outputs/apk/debug/*.apk
            truth-android-client/app/build/outputs/apk/release/*.apk
          if-no-files-found: warn
          retention-days: 7
